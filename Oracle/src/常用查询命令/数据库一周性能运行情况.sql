-- 数据库一周性能运行情况  

SELECT s.instance_number,
       s.endsnap_id,
       s.snap_date,
       decode(s.redosize,
              NULL,
              '--shutdown or end --',
              s.currtime) "TIME",
       to_char(round(s.seconds / 60,
                     2)) "elapse(min)",
       round(t.db_time / 1000000 / 60,
             2) "db time(min)",
       s.redosize reodo,
       round(s.redosize / s.seconds,
             2) "redo/s",
       s.logicalreads logical,
       round(s.logicalreads / s.seconds,
             2) "logical/s",
       physicalreads physical,
       round(s.physicalreads / s.seconds,
             2) "phy/s",
       s.executes execs,
       round(s.executes / s.seconds,
             2) "execs/s",
       s.parse,
       round(s.parse / s.seconds,
             2) "parse/s",
       s.hardparse,
       round(s.hardparse / s.seconds,
             2) "hardparse/s",
       s.transactions trans,
       round(s.transactions / s.seconds,
             2) "trans/s"
  FROM (SELECT instance_number,
               curr_redo - last_redo redosize,
               curr_logicalreads - last_logicalreads logicalreads,
               curr_physicalreads - last_physicalreads physicalreads,
               curr_executes - last_executes executes,
               curr_executes - last_parse parse,
               curr_hardparse - last_hardparse hardparse,
               curr_transactions - last_transactions transactions,
               round(((currtime + 0) - (lasttime + 0)) * 3600 * 24,
                     0) seconds,
               to_char(currtime,
                       'yyyy-mm-dd') snap_date,
               to_char(currtime,
                       'hh24:mi:ss') currtime,
               currsnap_id endsnap_id,
               to_char(startup_time,
                       'yyyy-mm-dd hh24:mi:ss') startup_time
          FROM (SELECT a.instance_number,
                       a.redo last_redo,
                       a.logicalreads last_logicalreads,
                       a.physicalreads last_physicalreads,
                       a.executes last_executes,
                       a.parse last_parse,
                       a.hardparse last_hardparse,
                       a.transactions last_transactions,
                       lead(a.redo,
                            1,
                            NULL) over(PARTITION BY b.instance_number ORDER BY b.end_interval_time) curr_redo,
                       lead(a.logicalreads,
                            1,
                            NULL) over(PARTITION BY b.instance_number ORDER BY b.end_interval_time) curr_logicalreads,
                       lead(a.physicalreads,
                            1,
                            NULL) over(PARTITION BY b.instance_number ORDER BY b.end_interval_time) curr_physicalreads,
                       lead(a.executes,
                            1,
                            NULL) over(PARTITION BY b.instance_number ORDER BY b.end_interval_time) curr_executes,
                       lead(a.parse,
                            1,
                            NULL) over(PARTITION BY b.instance_number ORDER BY b.end_interval_time) curr_parse,
                       lead(a.hardparse,
                            1,
                            NULL) over(PARTITION BY b.instance_number ORDER BY b.end_interval_time) curr_hardparse,
                       lead(a.transactions,
                            1,
                            NULL) over(PARTITION BY b.instance_number ORDER BY b.end_interval_time) curr_transactions,
                       b.end_interval_time lasttime,
                       lead(b.end_interval_time,
                            1,
                            NULL) over(PARTITION BY b.instance_number ORDER BY b.end_interval_time) currtime,
                       lead(b.snap_id,
                            1,
                            NULL) over(PARTITION BY b.instance_number ORDER BY b.end_interval_time) currsnap_id,
                       b.startup_time
                  FROM (SELECT snap_id,
                               dbid,
                               instance_number,
                               SUM(decode(stat_name,
                                          'redo size',
                                          VALUE,
                                          0)) redo,
                               SUM(decode(stat_name,
                                          'session logical reads',
                                          VALUE,
                                          0)) logicalreads,
                               SUM(decode(stat_name,
                                          'physical reads',
                                          VALUE,
                                          0)) physicalreads,
                               SUM(decode(stat_name,
                                          'execute count',
                                          VALUE,
                                          0)) executes,
                               SUM(decode(stat_name,
                                          'parse count (total)',
                                          VALUE,
                                          0)) parse,
                               SUM(decode(stat_name,
                                          'parse count (hard)',
                                          VALUE,
                                          0)) hardparse,
                               SUM(decode(stat_name,
                                          'user rollbacks',
                                          VALUE,
                                          'user commits',
                                          VALUE,
                                          0)) transactions
                          FROM dba_hist_sysstat
                         WHERE stat_name IN ('redo size',
                                             'session logical reads',
                                             'physical reads',
                                             'execute count',
                                             'user commits',
                                             'parse count (hard)',
                                             'parse count (total)')
                         GROUP BY snap_id,
                                  dbid,
                                  instance_number) a,
                       dba_hist_snapshot b
                 WHERE a.snap_id = b.snap_id
                   AND a.dbid = b.dbid
                   AND a.instance_number = b.instance_number
                 ORDER BY end_interval_time)) s,
       (SELECT b.instance_number,
               a.value,
               lead(a.value,
                    1,
                    NULL) over(PARTITION BY b.instance_number ORDER BY b.end_interval_time) - a.value db_time,
               lead(b.snap_id,
                    1,
                    NULL) over(PARTITION BY b.instance_number ORDER BY b.end_interval_time) endsnap_id
          FROM dba_hist_sys_time_model a,
               dba_hist_snapshot       b
         WHERE a.snap_id = b.snap_id
           AND a.dbid = b.dbid
           AND a.instance_number = b.instance_number
           AND a.stat_name = 'DB time') t
 WHERE s.endsnap_id = t.endsnap_id
   AND s.instance_number = t.instance_number
 ORDER BY s.snap_date DESC,
          TIME        DESC;